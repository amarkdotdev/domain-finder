# -------------------------------------------------
# Performance / security pre‑amble (http context)
# -------------------------------------------------
# Enable gzip compression for text‑based assets
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_types
    text/plain text/css application/json application/javascript
    application/xml application/rss+xml application/atom+xml
    application/font-woff application/font-woff2 image/svg+xml;

# -------------------------------------------------
# Redirect HTTP → HTTPS
# -------------------------------------------------
server {
    listen 80;
    server_name domainly.me www.domainly.me;

    # Let’s Encrypt HTTP‑01 challenges
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Force HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# -------------------------------------------------
# Main HTTPS / reverse‑proxy server
# -------------------------------------------------
server {
    listen 443 ssl http2;
    server_name domainly.me www.domainly.me;

    ssl_certificate     /etc/letsencrypt/live/domainly.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domainly.me/privkey.pem;

    # Tell browsers to stick with HTTPS for one year
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ---------- Frontend (React build) ----------
    location / {
        proxy_pass          http://frontend:80;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

    # ---------- Backend (FastAPI) ----------
    location /api/ {
        # Strip /api prefix before proxying
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass          http://backend:8000;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }
}
