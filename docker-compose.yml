version: "3.8"

services:
  # ---------------------------- Backend (FastAPI) ---------------------------
  backend:
    build:
      context: ./backend
    container_name: backend
    expose:
      - "8000"
    env_file:
      - .env                       # contains DATABASE_URL + API keys
    depends_on:
      - postgres                   # wait for DB
    networks:
      - backend-net

  # --------------------------- Frontend (React) ----------------------------
  frontend:
    build:
      context: ./frontend/domain-finder-ui
    container_name: frontend
    expose:
      - "80"
    networks:
      - backend-net

  # ------------------------------ Nginx ------------------------------------
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - backend-net

  # ----------------------------- Postgres ----------------------------------
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-net

  # ----------------------------- Certbot -----------------------------------
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - /var/www/html:/var/www/html
    entrypoint: >
      /bin/sh -c 'trap exit TERM;
                  while :; do
                    sleep 6h & wait $${!};
                    certbot renew;
                  done'
    networks:
      - backend-net

# ---------------------------- Shared Network -------------------------------
networks:
  backend-net:

# ---------------------------- Persistent Data ------------------------------
volumes:
  postgres_data:
